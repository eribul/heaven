% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lexisSeq.R
\name{lexisSeq}
\alias{lexisSeq}
\title{lexisSeq}
\usage{
lexisSeq(indat,invars,varname=NULL,splitvector,format,value="value")
}
\arguments{
\item{indat}{- base data with id, start, end, event and other data - possibly already split}

\item{invars}{- vector of colum names for id/entry/exit/event - in that order, 
example: c("id","start","end","event")}

\item{splitvector}{- A vector of calender times (integer). Splitvector can be a sequence of fixed times
with format="vector" or generate a sequence of from-to-by if given 3 values and format="seq"}

\item{format}{- either "vector" for fixed times or "seq" to generate a sequence of from-to-by}

\item{value}{- 0 to the left of the vector, increase of 1 as each element of vector is passed}
}
\value{
The function returns a new data table where records have been split according to the provided vector. Variables
unrelated to the splitting are left unchanged.
}
\description{
lexisSeq is used to split by a sequence of dates - typical use is a sequence of calender dates (time periods) or
a sequence of times after birth to split by age in a time dependent manner. Splitting times is provided by "splitvector"
and "varname".  If all subjects are to be split by the same times "varname" should be "NULL".  If "varname" is a number
it is added to the vector.  A typical use for this adding is to split by age. The vector identifies a series of times after birth and
"varname" is the date of birth.

The vector can be provided as a series of fixed times with format="vector".  It can also be provided as from-to-by, three
values with format="seq".  In that case a vector is defined with all values between "from" and "to" by each interval of "by".

The variable with default name "value" takes a value of zero to the left of the first interval and increased by 1 as each 
element in the vector is passed.

Overall the function provides identical usefulness as the SAS lexis macro
}
\details{
The input must be data.table.  This data.table is assumed already to be split by other functions with multiple
records having identical participant id. The function extracts thos variables necessary for splitting, splits
by the provided vector and finally merges other variable onto the final result.
}
\examples{
library(data.table)
dat <- data.table(ptid=c("A","A","B","B","C","C","D","D"),
                start=c(0,100,0,100,0,100,0,100),
                end=c(100,200,100,200,100,200,100,200),
                dead=c(0,1,0,0,0,1,0,1),
                Bdate=c(-5000,-5000,-2000,-2000,0,0,100,100))
out <- lexisSeq(indat=dat,invars=c("ptid","start","end","dead"),varname="Bdate",c(0,1000,5000),format="vector")
out[]
out2 <- lexisSeq(indat=dat,invars=c("ptid","start","end","dead"),varname=NULL,c(0,200,50),format="seq")
out2[]
}
\seealso{
lexis2 lexisFromTo
}
\author{
Christian Torp-Pedersen
}
